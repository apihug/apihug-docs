
plugins {
    id 'org.antora' version '1.0.0'
    id 'io.spring.antora.generate-antora-yml' version '0.0.1'
	id 'java'
}

repositories {
    mavenCentral()
}

antora {
    version = '3.2.0-alpha.2'
    playbook = 'cached-antora-playbook.yml'
    playbookProvider {
        repository = 'spring-projects/spring-framework'
        branch = 'docs-build'
        path = 'lib/antora/templates/per-branch-antora-playbook.yml'
        checkLocalBranch = true
    }
    //options = [clean: true, fetch: !project.gradle.startParameter.offline, stacktrace: true]
    options = ['--clean', '--stacktrace']
    dependencies = [
            '@antora/atlas-extension'                  : '1.0.0-alpha.1',
            '@antora/collector-extension'              : '1.0.0-alpha.3',
            '@asciidoctor/tabs'                        : '1.0.0-beta.3',
            '@opendevise/antora-release-line-extension': '1.0.0-alpha.2',
            '@springio/antora-extensions'              : '1.3.0',
            '@springio/asciidoctor-extensions'         : '1.0.0-alpha.9'
    ]
}

tasks.named("generateAntoraYml") {
    asciidocAttributes = project.provider( {
        return  ["spring-version": "3.0.1" ]
    } )
}

tasks.register("generateAntoraResources") {
    dependsOn 'generateAntoraYml'
}


dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    // This dependency is used by the application.
    //implementation 'com.google.guava:guava:31.0.1-jre'
}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

jar {
    enabled = false
}

javadoc {
    enabled = false
}
